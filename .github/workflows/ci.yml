name: CI

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - staging
      - trying
  pull_request:
    branches: [main]
    paths:
      - "**"
      - "!/*.md"
      - "!/**.md"

jobs:
  check:
    name: Rust Check - ${{ matrix.check }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        rust-target: [x86_64-unknown-linux-musl]
        check: [test, check, fmt, clippy]
    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
      TARGET: ${{ matrix.rust-target }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          target: ${{ matrix.rust-target }}
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust-target }}-${{ matrix.check }}
      - name: Cargo test
        if: ${{ matrix.check == 'test' }}
        run: |
           make test
      - name: Cargo check
        if: ${{ matrix.check == 'check' }}
        run: |
          cargo check --all-targets

      - name: Cargo fmt
        if: ${{ matrix.check == 'fmt' }}
        run: make check-fmt

      - name: Cargo clippy
        if: ${{ matrix.check == 'clippy' }}
        run: make clippy

  build:
    name: Build binary on ${{ matrix.rust-target }}
    runs-on: ${{ matrix.os }}
    env:
      TARGET: ${{ matrix.rust-target }}
    strategy:
      matrix:
        rust-target: [aarch64-unknown-linux-gnu]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14.0"
      - uses: Swatinem/rust-cache@v2
      - name: Install Fluvio
        run: |
          ./actions/fluvio-install.sh
          echo "$HOME/.fluvio/bin" >> $GITHUB_PATH
      - name: install cross
        run: cargo install cross
      - name: Build
        env:
          GH_TOKEN: ${{ github.token }}
        run:
          make cross_build

  done:
    name: Done
    needs:
      - check
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo "Done!"
